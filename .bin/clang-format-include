#!/bin/bash
# Copyright 2016 Aleksander Gajewski <adiog@brainfuck.pl>
#   created:  Sun 14 Aug 2016 02:04:41 PM CEST
#   modified: Tue 30 Aug 2016 10:53:12 PM CEST

# BASH_CLEANUP {{{
BASH_CLEANUP_FILE=`mktemp`
trap BASH_CLEANUP EXIT

function BASH_CLEANUP() {
  BASH_CLEANUP_FILE_REV=`mktemp`
  tac $BASH_CLEANUP_FILE > $BASH_CLEANUP_FILE_REV
  . $BASH_CLEANUP_FILE_REV
  rm $BASH_CLEANUP_FILE $BASH_CLEANUP_FILE_REV
}

function BASH_FINALLY() {
  echo "$*" >> $BASH_CLEANUP_FILE
}

function BASH_MKTEMP() {
  BASH_TMP=`mktemp`
  echo "rm $BASH_TMP" >> $BASH_CLEANUP_FILE
  echo $BASH_TMP
}

function BASH_MKTEMP_DIR() {
  BASH_TMP=`mktemp -d`
  echo "rm -fr $BASH_TMP" >> $BASH_CLEANUP_FILE
  echo $BASH_TMP
}
# }}}

CLANG_FORMAT=~/local/bin/clang-format

function get-first-line-containing()
{
  FILE=$1
  PATTERN=$2
  cat -n $FILE | \
    grep $PATTERN | \
    sed -e "s/\s+/#/g" | \
    cut -d'#' -f1 | \
    head -n 1 | \
    sed -e "s/\s*//g"
}

function get-last-line-containing() 
{
  FILE=$1
  PATTERN=$2
  cat -n $FILE | \
    grep $PATTERN | \
    sed -e "s/\s+/#/g" | \
    cut -d'#' -f1 | \
    tail -n 1 | \
    sed -e "s/\s*//g"
}

function get-range()
{
  FILE=$1
  PATTERN=$2
  DELIMITER=$3
  echo "$(get-first-line-containing $FILE $PATTERN)${DELIMITER}$(get-last-line-containing $FILE $PATTERN)"
}

function get-sed-range()
{
  FILE=$1
  PATTERN=$2
  get-range $FILE $PATTERN ","
}

function get-clang-format-range()
{
  FILE=$1
  PATTERN=$2
  get-range $FILE $PATTERN ":"
}

function merge_include()
{
  FILE=$1
  RANGE=`get-sed-range $FILE "#include"`
  sed -e "${RANGE} {/^$/d}" -i $FILE
}

function split_include()
{
  FILE=$1
 
  REGEX=`cat ~agajewski/.dotfiles/.clang-format | \
    grep Regex | \
    sed -e "s/\^//" -e "s/[^']*'\(.*\)'.*/\1/"`
  set -f
  REGEX_ARR=($REGEX)
  set +f
  REGEX_LEN=${#REGEX_ARR[@]}
     
  LINES_TO_ADD=""

  for (( i=0; i<${REGEX_LEN}; i++ ));
  do
    LINE_TO_ADD=`cat -n $FILE | \
      grep -e "#include ${REGEX_ARR[$i]}" | \
      sed -e "s/\s//g" | \
      cut -d'#' -f1 | \
      tail -n 1`
    LINES_TO_ADD="$LINE_TO_ADD $LINES_TO_ADD"
  done

  for line_to_add in $LINES_TO_ADD;
  do
    sed -e "$((${line_to_add} + 1))i\ " -i $FILE
  done
}

function trick-main-include-start()
{
  FILE=$1
  HEADER=${FILE/cpp/hpp}
  HEADER=${HEADER/*\//}
  sed -e "s/#include <\(.*\)${HEADER}>/#include \"\1${HEADER}\"/" -i $FILE 
}

function trick-main-include-end()
{
  FILE=$1
  HEADER=${FILE/cpp/hpp}
  HEADER=${HEADER/*\//}
  sed -e "s/#include \"\(.*\)${HEADER}\"/#include <\1${HEADER}>/" -i $FILE 
}


function clang-format-include() 
{
  FILE=$1

  trick-main-include-start $FILE

  #cat -n $FILE | head -n 70 && echo "##########################################"
  merge_include $FILE
  #cat -n $FILE | head -n 70 && echo "##########################################"
  
  RANGE=`get-clang-format-range $FILE "#include"`
  $CLANG_FORMAT --lines ${RANGE} -i $FILE
  split_include $FILE

  #cat -n $FILE | head -n 70 && echo "##########################################"
  RANGE=`get-clang-format-range $FILE "#include"`
  $CLANG_FORMAT --lines ${RANGE} -style="{MaxEmptyLinesToKeep: 1}" -i $FILE
    
  #cat -n $FILE | head -n 70 && echo "##########################################"
  LINE_TO_ADD=`cat -n $FILE |\
    grep -e "#include" | \
    sed -e "s/\s//g" | \
    cut -d'#' -f1 | \
    tail -n 1`
  sed -e "$(($LINE_TO_ADD + 1))i\ " -i $FILE
  #cat -n $FILE | head -n 70 && echo "##########################################"

  RANGE=`get-clang-format-range $FILE "#include"`
  $CLANG_FORMAT --lines ${RANGE} -i $FILE
  #cat -n $FILE | head -n 70 && echo "##########################################"
  
  trick-main-include-end $FILE
  #cat -n $FILE | head -n 70 && echo "##########################################"
}

clang-format-include $*

