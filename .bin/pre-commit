#!/bin/bash

function is_not_formatted() {
  file=$1
  tmp=`mktemp`
  clang-format $file > $tmp
  diff $file $tmp > /dev/null 
  code=$?
  rm $tmp
  if [[ $code == "0" ]];
  then 
    return 1
  fi
}

function exceeds_column_limit() {
  grep -q -E "^.{${COLUMNLIMIT:-120}}.+" $*
}

function has_dos_eols() {
  file $1 | grep -q CRLF
}

function starts_without_comment() {
  test -z "`sed -n -e "1{/\/\//p}" $1`"
}


MODIFIED_FILES_LIST=`git diff --staged --no-commit-id --name-only`
FORMAT_EXTENSIONS="cc cpp h hpp"


for file in ${MODIFIED_FILES_LIST}; 
do
  for ext in ${FORMAT_EXTENSIONS}; 
  do
    if [[ ${file} = *.$ext ]]; 
    then 

      if starts_without_comment ${file};
      then
        echo -e "File ${file}\e[31m does not include trailing copyright\e[39m."
        exit_code=1
      else
        if [[ -n "$PRECOMMIT_VERBOSE" ]];
        then
          echo -e "File ${file} starts with a comment."
        fi
      fi

      if is_not_formatted ${file}; 
      then
        echo -e "File ${file}\e[31m was not formatted\e[39m correctly."
        exit_code=1
      else
        if [[ -n "$PRECOMMIT_VERBOSE" ]];
        then
          echo "File ${file} was formatted correctly."
        fi
      fi

      if has_dos_eols ${file}; 
      then
        echo -e "File ${file}\e[31m has windows EOLs\e[39m."
        exit_code=1
      else
        if [[ -n "$PRECOMMIT_VERBOSE" ]];
        then
          echo "File ${file} has correct unix EOLs."
        fi
      fi

      if exceeds_column_limit ${file}; 
      then
        echo -e "File ${file}\e[31m has lines longer than ${COLUMNLIMIT:-120}\e[39m."
        exit_code=1
      else
        if [[ -n "$PRECOMMIT_VERBOSE" ]];
        then
          echo "File ${file} has lines within ${COLUMNLIMIT:-120} limit."
        fi
      fi

    fi
  done
done

exit $exit_code
